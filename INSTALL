* Download the latest source:

    git clone http://git.fri.uni-lj.si/polz/bober.git

* Set BOBER_HOME to make pasting from the rest of these instructions easier:

    cd bober
    export BOBER_HOME=$PWD

* Install the MySQL Server:

    sudo apt-get update
    sudo apt-get install mariadb-server
    sudo mysql_secure_installation
    sudo mysql_install_db

* Create the databases. Pick your own passwords.

    mysql -u root -p mysql

* Create the database for the competition system

    create database bober character set utf8 collate utf8_general_ci;
    grant all on bober.* to bober@localhost; set password for bober@localhost=password('YOUR PASSWORD'); flush privileges;

* Create and edit the django configuration:

    cd $BOBER_HOME/django/bober/
    cp settings-bober.py settings.py
    vim settings.py

* Change the database settings:

    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.mysql',
            'NAME': 'bober',
            'USER': 'bober',
            'PASSWORD': 'YOUR PASSWORD',

* Install the Virtualenv and create the python virtual environment in 
  another directory:

      On Debian / Ubuntu:
      sudo apt-get install virtualenv python-dev libmariadbclient-dev-compat 
      virtualenv bober_env
      source bober_env/bin/activate

* Install the all package with use the requirements.txt:

      pip install -r $BOBER_HOME/django/bober/requirements.txt

* Create the new directories for the static and media files:

      mkdir boberstatic
      mkdir bobermedia

* And change the STATIC_ROOT and MEDIA_ROOT on the settings.py:

      STATIC_ROOT = '/your/static/dir/path'
      MEDIA_ROOT = '/your/media/directory/path'

* Run the collectstatic management command:

      python manage.py collectstatic

* Migrate the database

      python manage.py migrate

* Create the translation files
   
      for i in bober_* code_based_auth; do cd $i; ../manage.py compilemessages; cd ..; done

* Finally, start the development web server:

      python manage.py runserver


If you want to deploy bober in a production environment, you will also have
to set up nginx. To do this, you can follow the instructions below.

* Create and edit the web server configuration files

    cp $BOBER_HOME/webconfig/nginx/bober* /etc/nginx/sites-available/
    cd /etc/nginx/sites-enabled/
    ln -s ../sites-available/bober* .

* Edit the competition system virtual host file:

    vim bober

* In /etc/nginx/sites-enabled/bober, change:

    server_name BOBER_COMPETITION_SERVER_NAME;

* Still in /etc/nginx/sites-enabled/bober, change:

    root BOBER_HOME/django/bober/;

* Add the location for static and media files:

    location /media/  {
        alias /your/media/dir/path;
    }

    location  /static/ {
        alias /your/static/dir/path;
    }

* Configure the uwsgi daemon which is used by the task entry system to run the WSGI application:

    cp $BOBER_HOME/webconfig/uwsgi/bober-tasks.ini /etc/uwsgi/apps-available/
    cd /etc/uwsgi/apps-enabled/
    ln -s ../apps-available/bober-tasks.ini .
    vim bober-tasks.ini

* Edit the bober-tasks.ini:

    wsgi-file       = BOBER_HOME/django/bober/bober/wsgi.py
    chdir           = BOBER_HOME/django/bober
    virtualenv      = /path/to/your/bober_env

* For the competition system to work, the web server must have access to some directories:

    cd $BOBER_HOME
    chown -R www-data.www-data /path/to/your/static/dir /path/to/your/media/dir

* Restart the web server:

    service nginx restart

* And, finally, the uwsgi daemon

    service uwsgi restart
